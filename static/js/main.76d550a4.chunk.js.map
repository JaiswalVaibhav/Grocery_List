{"version":3,"sources":["components/GroceryInput.js","components/DisplayGroceryList.js","components/GroceryStats.js","components/App.js","index.js"],"names":["GroceryInput","useContext","listContext","list","setList","useState","value","setValue","quantity","setQuantity","isTrue","className","onSubmit","e","preventDefault","map","el","listItem","toLowerCase","repetation","parseInt","document","getElementById","isPurchased","innerHTML","id","type","name","placeholder","onChange","target","console","log","onClick","required","DisplayGroceryList","isDeleted","style","background","newGroceryList","GroceryStats","totalItemCountList","itemCount","length","createContext","App","Provider","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.76d550a4.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport { listContext } from \"./App\";\n\nfunction GroceryInput() {\n  const { list, setList } = useContext(listContext);\n\n  const [value, setValue] = useState(\"\");\n\n  const [quantity, setQuantity] = useState();\n\n  var isTrue = true;\n\n  const addToList = (e) => {\n    e.preventDefault();\n\n    if (quantity >= 1) {\n      list.map((el) => {\n        if (el.listItem.toLowerCase() === value.toLowerCase()) {\n          el.repetation = el.repetation + parseInt(quantity, 10);\n          setValue(\"\");\n          setQuantity();\n          setList([...list]);\n          isTrue = false;\n          document.getElementById(\"numberInput\").value = \"\";\n        }\n      });\n      if (isTrue) {\n        setList([\n          ...list,\n          {\n            listItem: value,\n            repetation: parseInt(quantity, 10),\n            isPurchased: false,\n          },\n        ]);\n        setValue(\"\");\n        setQuantity();\n        document.getElementById(\"numberInput\").value = \"\";\n      } \n    } else {\n      document.getElementById(\"showNotification\").innerHTML =\n        \"Quantity must be greater than 0.\";\n      setValue(\"\");\n      setQuantity();\n      document.getElementById(\"numberInput\").value = \"\";\n    }\n  };\n\n\n  const handleChangeText = (e) => {\n    const {\n      target: { value },\n    } = e;\n    console.log(value);\n    setValue(value);\n  };\n\n  const handleChangeNumber = (e) => {\n    const {\n      target: { value },\n    } = e;\n    console.log(value);\n    setQuantity(value);\n    console.log(quantity);\n  };\n\n  const clearAll = () => {\n    setList([]);\n  };\n\n  return (\n    <>\n      <form className=\"input-form\" onSubmit={addToList}>\n\n        <input\n          id=\"textInput\"\n          type=\"text\"\n          name=\"item\"\n          placeholder=\"Add New Item\"\n          value={value}\n          onChange={handleChangeText}\n          onClick={() => {\n            document.getElementById(\"showNotification\").innerHTML = \"\";\n          }}\n          required\n        ></input>\n\n        <input\n          id=\"numberInput\"\n          type=\"number\"\n          name=\"numberOfItem\"\n          placeholder=\"Quantity\"\n          onChange={handleChangeNumber}\n          required\n        ></input>\n\n        <button id=\"add-btn\" className=\"btn\" type=\"submit\">\n          Add\n        </button>\n\n        <button className=\"btn\" type=\"button\" onClick={clearAll}>\n          Remove All\n        </button>\n      </form>\n\n      <p id=\"showNotification\"></p>\n    </>\n  );\n}\n\nexport default GroceryInput;\n","import React, { useContext } from \"react\";\n\nimport { listContext } from \"./App\";\n\nfunction DisplayGroceryList() {\n  const { list, setList } = useContext(listContext);\n\n  return (\n    <div className=\"grocery-list\">\n      <table>\n        <tr>\n          <th>Items</th>\n          <th>Quantity</th>\n          <th>Purchase</th>\n          <th>Remove</th>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n        </tr>\n\n            {list.map((el) => {\n                console.log(el.listItem);\n                const { listItem, repetation, isPurchased, isDeleted } = el;\n                if(!isDeleted){\n                return (\n                  <>\n                    <tr style={{ background: isPurchased ? \"red\" : \"white\" }}>\n                        <td\n                          onClick={() => {\n                            const newGroceryList = list.map((el) => {\n                              if (el.listItem === listItem) {\n                                return { ...el, isPurchased: !el.isPurchased };\n                              }\n                              return el;\n                            });\n                            setList(newGroceryList);\n                          }}\n                        >\n                          {listItem}\n                        </td>\n                        <td>\n                          {repetation}\n                        </td>\n                        <td>\n                          <button \n                              className=\"purchase_btn\"\n                              onClick={() => {\n                                const newGroceryList = list.map((el) => {\n                                  if (el.listItem === listItem) {\n                                    return { ...el, isPurchased: !el.isPurchased };\n                                  }\n                                  return el;\n                                });\n                                setList(newGroceryList);\n                              }}\n                          > \n                            Purchase\n                          </button>\n                        </td>\n                        <td>\n                          <button \n                              onClick={() => {\n                                const newGroceryList = list.map((el) => {\n                                  if (el.listItem === listItem) {\n                                    return { ...el, isDeleted: !el.isDeleted };\n                                  }\n                                  return el;\n                                });\n                                setList(newGroceryList);\n                              }}\n                          > \n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                  </>\n                );\n              }\n            })}\n      </table>\n    </div>\n  );\n}\n\nexport default DisplayGroceryList;\n","import React, { useContext } from \"react\";\n\nimport { listContext } from \"./App\";\n\nfunction GroceryStats() {\n  const { list, setList } = useContext(listContext);\n\n  const purchaseAll = () => {\n    setList(\n      list.map((el) => {\n        return { ...el, isPurchased: true };\n      })\n    );\n  };\n\n  var itemCount = 0;\n\n  var totalItemCountList;\n\n  if (list.length === 0) {\n    totalItemCountList = [0];\n  } else {\n    totalItemCountList = list.map((el) => {\n      if(!el.isDeleted){\n        itemCount = itemCount + el.repetation;\n      }\n      return itemCount;\n    });\n  }\n\n  return (\n    <div>\n      <h4>\n        Total number of Grocery items :{\" \"}\n        {totalItemCountList[totalItemCountList.length - 1]}\n      </h4>\n\n      <button className=\"btn\" onClick={purchaseAll}>\n        Purchase All\n      </button>\n    </div>\n  );\n}\n\nexport default GroceryStats;\n","import React, { createContext, useState } from \"react\";\n\nimport GroceryInput from \"./GroceryInput\";\n\nimport DisplayGroceryList from \"./DisplayGroceryList\";\n\nimport GroceryStats from \"./GroceryStats\";\n\nexport const listContext = createContext();\n\nfunction App() {\n  const listObject = [\n    { listItem: \"Honey\", repetation: 1, isPurchased: false, isDeleted:false },\n  ];\n\n  const [list, setList] = useState(listObject);\n\n  return (\n    <listContext.Provider value={{ list, setList }}>\n      <div>\n        <h1 className=\"title\">Grocery List</h1>\n\n        <GroceryInput />\n\n        <DisplayGroceryList />\n\n        <GroceryStats />\n      </div>\n    </listContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './cssFiles/index.css';\nimport './cssFiles/App.css'\nimport App from './components/App'\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}